# Generated by Django 4.2.9 on 2025-06-24 10:01

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BotSession',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создано')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Обновлено')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('state', models.CharField(blank=True, max_length=50, null=True, verbose_name='Состояние')),
                ('context_data', models.JSONField(blank=True, default=dict, verbose_name='Контекстные данные')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активна')),
                ('last_activity', models.DateTimeField(auto_now=True, verbose_name='Последняя активность')),
            ],
            options={
                'verbose_name': 'Сессия бота',
                'verbose_name_plural': 'Сессии бота',
                'ordering': ('-last_activity',),
            },
        ),
        migrations.CreateModel(
            name='BotStatistics',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создано')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Обновлено')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date', models.DateField(unique=True, verbose_name='Дата')),
                ('total_users', models.PositiveIntegerField(default=0, verbose_name='Всего пользователей')),
                ('active_users', models.PositiveIntegerField(default=0, verbose_name='Активных пользователей')),
                ('new_users', models.PositiveIntegerField(default=0, verbose_name='Новых пользователей')),
                ('total_messages', models.PositiveIntegerField(default=0, verbose_name='Всего сообщений')),
                ('voice_messages', models.PositiveIntegerField(default=0, verbose_name='Голосовых сообщений')),
                ('photo_messages', models.PositiveIntegerField(default=0, verbose_name='Фото сообщений')),
                ('successful_commands', models.PositiveIntegerField(default=0, verbose_name='Успешных команд')),
                ('failed_commands', models.PositiveIntegerField(default=0, verbose_name='Неудачных команд')),
                ('users_ru', models.PositiveIntegerField(default=0, verbose_name='Пользователей (русский)')),
                ('users_en', models.PositiveIntegerField(default=0, verbose_name='Пользователей (английский)')),
                ('users_uz', models.PositiveIntegerField(default=0, verbose_name='Пользователей (узбекский)')),
            ],
            options={
                'verbose_name': 'Статистика бота',
                'verbose_name_plural': 'Статистика бота',
                'ordering': ('-date',),
            },
        ),
        migrations.CreateModel(
            name='MessageLog',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создано')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Обновлено')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('message_type', models.CharField(choices=[('text', 'Текст'), ('voice', 'Голос'), ('photo', 'Фото'), ('command', 'Команда'), ('callback', 'Callback')], max_length=10, verbose_name='Тип сообщения')),
                ('direction', models.CharField(choices=[('incoming', 'Входящее'), ('outgoing', 'Исходящее')], max_length=10, verbose_name='Направление')),
                ('content', models.TextField(verbose_name='Содержимое')),
                ('telegram_message_id', models.BigIntegerField(blank=True, null=True, verbose_name='ID сообщения в Telegram')),
                ('processing_time', models.FloatField(blank=True, null=True, verbose_name='Время обработки (сек)')),
                ('success', models.BooleanField(default=True, verbose_name='Успешно')),
                ('error_message', models.TextField(blank=True, verbose_name='Сообщение об ошибке')),
            ],
            options={
                'verbose_name': 'Лог сообщения',
                'verbose_name_plural': 'Логи сообщений',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='PhotoReceipt',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создано')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Обновлено')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('telegram_file_id', models.CharField(max_length=255, verbose_name='Telegram File ID')),
                ('file_size_bytes', models.PositiveIntegerField(verbose_name='Размер файла (байт)')),
                ('extracted_text', models.TextField(blank=True, verbose_name='Извлечённый текст')),
                ('items_count', models.PositiveIntegerField(default=0, verbose_name='Количество товаров')),
                ('total_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True, verbose_name='Общая сумма')),
                ('status', models.CharField(choices=[('processing', 'Обрабатывается'), ('success', 'Успешно'), ('failed', 'Ошибка')], default='processing', max_length=10, verbose_name='Статус обработки')),
                ('processing_time', models.FloatField(blank=True, null=True, verbose_name='Время обработки (сек)')),
                ('error_message', models.TextField(blank=True, verbose_name='Сообщение об ошибке')),
            ],
            options={
                'verbose_name': 'Фото чека',
                'verbose_name_plural': 'Фото чеков',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='TelegramUser',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создано')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Обновлено')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('telegram_user_id', models.BigIntegerField(unique=True, verbose_name='Telegram User ID')),
                ('telegram_chat_id', models.BigIntegerField(unique=True, verbose_name='Telegram Chat ID')),
                ('username', models.CharField(blank=True, max_length=255, verbose_name='Username')),
                ('first_name', models.CharField(blank=True, max_length=255, verbose_name='Имя')),
                ('last_name', models.CharField(blank=True, max_length=255, verbose_name='Фамилия')),
                ('phone_number', models.CharField(blank=True, max_length=20, verbose_name='Номер телефона')),
                ('language', models.CharField(choices=[('ru', 'Русский'), ('en', 'English'), ('uz', "O'zbekcha")], default='ru', max_length=5, verbose_name='Язык интерфейса')),
                ('preferred_currency', models.CharField(choices=[('UZS', 'Узбекский сум'), ('USD', 'Доллар США'), ('EUR', 'Евро'), ('RUB', 'Российский рубль')], default='UZS', max_length=3, verbose_name='Предпочитаемая валюта')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активен')),
                ('is_blocked', models.BooleanField(default=False, verbose_name='Заблокирован')),
            ],
            options={
                'verbose_name': 'Пользователь Telegram',
                'verbose_name_plural': 'Пользователи Telegram',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='VoiceCommand',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создано')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Обновлено')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('telegram_file_id', models.CharField(max_length=255, verbose_name='Telegram File ID')),
                ('transcription', models.TextField(blank=True, verbose_name='Распознанный текст')),
                ('duration_seconds', models.PositiveIntegerField(verbose_name='Длительность (сек)')),
                ('command_type', models.CharField(choices=[('expense', 'Расход'), ('income', 'Доход'), ('query', 'Запрос'), ('unknown', 'Неизвестно')], default='unknown', max_length=10, verbose_name='Тип команды')),
                ('status', models.CharField(choices=[('processing', 'Обрабатывается'), ('success', 'Успешно'), ('failed', 'Ошибка')], default='processing', max_length=10, verbose_name='Статус обработки')),
                ('extracted_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True, verbose_name='Извлеченная сумма')),
                ('processing_time', models.FloatField(blank=True, null=True, verbose_name='Время обработки (сек)')),
                ('error_message', models.TextField(blank=True, verbose_name='Сообщение об ошибке')),
                ('created_transaction_id', models.UUIDField(blank=True, null=True, verbose_name='ID созданной транзакции')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='voice_commands', to='bot.telegramuser')),
            ],
            options={
                'verbose_name': 'Голосовая команда',
                'verbose_name_plural': 'Голосовые команды',
                'ordering': ('-created_at',),
            },
        ),
        migrations.AddIndex(
            model_name='telegramuser',
            index=models.Index(fields=['telegram_chat_id'], name='bot_telegra_telegra_967612_idx'),
        ),
        migrations.AddIndex(
            model_name='telegramuser',
            index=models.Index(fields=['telegram_user_id'], name='bot_telegra_telegra_0f72fe_idx'),
        ),
        migrations.AddIndex(
            model_name='telegramuser',
            index=models.Index(fields=['is_active'], name='bot_telegra_is_acti_b08e5e_idx'),
        ),
        migrations.AddField(
            model_name='photoreceipt',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='photo_receipts', to='bot.telegramuser'),
        ),
        migrations.AddField(
            model_name='messagelog',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='message_logs', to='bot.telegramuser'),
        ),
        migrations.AddIndex(
            model_name='botstatistics',
            index=models.Index(fields=['date'], name='bot_botstat_date_400d99_idx'),
        ),
        migrations.AddField(
            model_name='botsession',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions', to='bot.telegramuser'),
        ),
        migrations.AddIndex(
            model_name='voicecommand',
            index=models.Index(fields=['user', 'status'], name='bot_voiceco_user_id_66a496_idx'),
        ),
        migrations.AddIndex(
            model_name='voicecommand',
            index=models.Index(fields=['command_type'], name='bot_voiceco_command_081b24_idx'),
        ),
        migrations.AddIndex(
            model_name='photoreceipt',
            index=models.Index(fields=['user', 'status'], name='bot_photore_user_id_d34db5_idx'),
        ),
        migrations.AddIndex(
            model_name='messagelog',
            index=models.Index(fields=['user', 'message_type'], name='bot_message_user_id_2ffb18_idx'),
        ),
        migrations.AddIndex(
            model_name='messagelog',
            index=models.Index(fields=['created_at'], name='bot_message_created_cee4d2_idx'),
        ),
        migrations.AddIndex(
            model_name='botsession',
            index=models.Index(fields=['user', 'is_active'], name='bot_botsess_user_id_ec4568_idx'),
        ),
        migrations.AddIndex(
            model_name='botsession',
            index=models.Index(fields=['state'], name='bot_botsess_state_426267_idx'),
        ),
    ]
