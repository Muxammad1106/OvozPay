"""
–ì–ª–∞–≤–Ω—ã–π –º–æ–¥—É–ª—å Telegram Bot –¥–ª—è OvozPay
–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å AI –º–æ–¥—É–ª–µ–º –¥–ª—è –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
"""

import logging
import asyncio
from typing import Dict, Any

from telegram import Update, BotCommand
from telegram.ext import (
    Updater, 
    CommandHandler, 
    MessageHandler, 
    Filters,
    CallbackContext
)

from django.conf import settings

from .handlers.voice_handler import voice_handler
from .handlers.photo_handler import photo_handler


logger = logging.getLogger(__name__)


class OvozPayBot:
    """–û—Å–Ω–æ–≤–Ω–æ–π –∫–ª–∞—Å—Å Telegram Bot –¥–ª—è OvozPay"""
    
    def __init__(self):
        self.application = None
        self.is_running = False
    
    def setup_bot(self) -> Updater:
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –±–æ—Ç–∞"""
        try:
            # –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
            self.application = Updater(
                settings.TELEGRAM_BOT_TOKEN
            )
            
            # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
            self._register_handlers()
            
            # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞
            asyncio.create_task(self._setup_bot_commands())
            
            logger.info("Telegram Bot –Ω–∞—Å—Ç—Ä–æ–µ–Ω —É—Å–ø–µ—à–Ω–æ")
            return self.application
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞: {e}")
            raise
    
    def _register_handlers(self):
        """–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–æ–±—â–µ–Ω–∏–π"""
        
        # –ö–æ–º–∞–Ω–¥—ã
        self.application.dispatcher.add_handler(CommandHandler("start", self.start_command))
        self.application.dispatcher.add_handler(CommandHandler("help", self.help_command))
        self.application.dispatcher.add_handler(CommandHandler("balance", self.balance_command))
        self.application.dispatcher.add_handler(CommandHandler("stats", self.stats_command))
        self.application.dispatcher.add_handler(CommandHandler("goals", self.goals_command))
        self.application.dispatcher.add_handler(CommandHandler("reminders", self.reminders_command))
        self.application.dispatcher.add_handler(CommandHandler("settings", self.settings_command))
        
        # –ì–æ–ª–æ—Å–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è - –ì–õ–ê–í–ù–ê–Ø –§–ò–ß–ê
        self.application.dispatcher.add_handler(
            MessageHandler(Filters.voice, voice_handler.handle_voice_message)
        )
        
        # –§–æ—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏—è - –°–ö–ê–ù–ò–†–û–í–ê–ù–ò–ï –ß–ï–ö–û–í
        self.application.dispatcher.add_handler(
            MessageHandler(Filters.photo, photo_handler.handle_photo_message)
        )
        
        # –¢–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è (—Ä–µ–∑–µ—Ä–≤–Ω—ã–π —Å–ø–æ—Å–æ–±)
        self.application.dispatcher.add_handler(
            MessageHandler(Filters.text & ~Filters.command, self.handle_text_message)
        )
        
        logger.info("–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã")
    
    async def _setup_bot_commands(self):
        """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞"""
        try:
            commands = [
                BotCommand("start", "üöÄ –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º"),
                BotCommand("help", "‚ùì –ü–æ–º–æ—â—å –∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏"),
                BotCommand("balance", "üí∞ –ü–æ–∫–∞–∑–∞—Ç—å –±–∞–ª–∞–Ω—Å"),
                BotCommand("stats", "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ä–∞—Å—Ö–æ–¥–æ–≤"),
                BotCommand("goals", "üéØ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ü–µ–ª—è–º–∏"),
                BotCommand("reminders", "‚è∞ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è–º–∏"),
                BotCommand("settings", "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏"),
            ]
            
            await self.application.bot.set_my_commands(commands)
            logger.info("–ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∫–æ–º–∞–Ω–¥: {e}")
    
    async def start_command(self, update: Update, context: CallbackContext):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
        welcome_message = """
üéâ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ OvozPay!

üí¨ –Ø —É–º–µ—é —É–ø—Ä–∞–≤–ª—è—Ç—å –≤–∞—à–∏–º–∏ —Ñ–∏–Ω–∞–Ω—Å–∞–º–∏ –≥–æ–ª–æ—Å–æ–º –∏ —Ñ–æ—Ç–æ!

üé§ **–û—Ç–ø—Ä–∞–≤—å—Ç–µ –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ** –∏ —Å–∫–∞–∂–∏—Ç–µ:
‚Ä¢ "–ü–æ–∫–∞–∂–∏ –º–æ–π –±–∞–ª–∞–Ω—Å"
‚Ä¢ "–î–æ–±–∞–≤—å —Ä–∞—Å—Ö–æ–¥ —Ö–ª–µ–± 5000 —Å—É–º"  
‚Ä¢ "–°–æ–∑–¥–∞–π —Ü–µ–ª—å –Ω–∞–∫–æ–ø–∏—Ç—å –º–∏–ª–ª–∏–æ–Ω –Ω–∞ –º–∞—à–∏–Ω—É"
‚Ä¢ "–ü–æ–∫–∞–∂–∏ –º–æ–∏ —Ü–µ–ª–∏"
‚Ä¢ "–°–æ–∑–¥–∞–π –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –∫—É–ø–∏—Ç—å –º–æ–ª–æ–∫–æ –∑–∞–≤—Ç—Ä–∞"
‚Ä¢ "–ü–æ–∫–∞–∂–∏ —Ä–∞—Å—Ö–æ–¥—ã –∑–∞ –º–µ—Å—è—Ü"
‚Ä¢ "–°–º–µ–Ω–∏ –≤–∞–ª—é—Ç—É –Ω–∞ –¥–æ–ª–ª–∞—Ä"

üì∏ **–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ —á–µ–∫–∞** –∏ —è:
‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Ä–∞—Å–ø–æ–∑–Ω–∞—é –≤—Å–µ —Ç–æ–≤–∞—Ä—ã –∏ —Ü–µ–Ω—ã
‚Ä¢ –°–æ–∑–¥–∞–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é —Ä–∞—Å—Ö–æ–¥–∞  
‚Ä¢ –ü–æ–∫–∞–∂—É –¥–µ—Ç–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–∫—É–ø–∫–µ
‚Ä¢ –î–æ–±–∞–≤–ª—é –≤ –Ω—É–∂–Ω—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é

üåç –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é —è–∑—ã–∫–∏: –†—É—Å—Å–∫–∏–π, –£–∑–±–µ–∫—Å–∫–∏–π, English

üìù –¢–∞–∫–∂–µ –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–µ–∫—Å—Ç–æ–≤—ã–µ –∫–æ–º–∞–Ω–¥—ã:
/balance - –±–∞–ª–∞–Ω—Å
/stats - —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞  
/goals - —Ü–µ–ª–∏
/reminders - –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è
/settings - –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
/help - –ø–æ–º–æ—â—å

üöÄ –ù–∞—á–Ω–∏—Ç–µ —Å –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –∏–ª–∏ —Ñ–æ—Ç–æ —á–µ–∫–∞!
        """
        
        await update.message.reply_text(welcome_message)
    
    async def help_command(self, update: Update, context: CallbackContext):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help"""
        help_message = """
‚ùì **–ü–æ–º–æ—â—å –ø–æ OvozPay**

üé§ **–ì–û–õ–û–°–û–í–´–ï –ö–û–ú–ê–ù–î–´** (–æ—Å–Ω–æ–≤–Ω–æ–π —Å–ø–æ—Å–æ–±):

üí∞ **–§–∏–Ω–∞–Ω—Å—ã:**
‚Ä¢ "–ü–æ–∫–∞–∂–∏ –±–∞–ª–∞–Ω—Å"
‚Ä¢ "–î–æ–±–∞–≤—å —Ä–∞—Å—Ö–æ–¥ [–æ–ø–∏—Å–∞–Ω–∏–µ] [—Å—É–º–º–∞]"
‚Ä¢ "–î–æ–±–∞–≤—å –¥–æ—Ö–æ–¥ [—Å—É–º–º–∞] –æ—Ç [–∏—Å—Ç–æ—á–Ω–∏–∫]"

üéØ **–¶–µ–ª–∏:**
‚Ä¢ "–°–æ–∑–¥–∞–π —Ü–µ–ª—å –Ω–∞–∫–æ–ø–∏—Ç—å [—Å—É–º–º–∞] –Ω–∞ [–Ω–∞–∑–≤–∞–Ω–∏–µ]"
‚Ä¢ "–ü–æ–∫–∞–∂–∏ –º–æ–∏ —Ü–µ–ª–∏"
‚Ä¢ "–î–æ–±–∞–≤—å [—Å—É–º–º–∞] –∫ —Ü–µ–ª–∏ [–Ω–∞–∑–≤–∞–Ω–∏–µ]"

‚è∞ **–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è:**
‚Ä¢ "–°–æ–∑–¥–∞–π –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ [—Ç–µ–∫—Å—Ç] –Ω–∞ [–≤—Ä–µ–º—è]"
‚Ä¢ "–ü–æ–∫–∞–∂–∏ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è"
‚Ä¢ "–£–¥–∞–ª–∏ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ [–Ω–∞–∑–≤–∞–Ω–∏–µ]"

üìä **–ê–Ω–∞–ª–∏—Ç–∏–∫–∞:**
‚Ä¢ "–ü–æ–∫–∞–∂–∏ —Ä–∞—Å—Ö–æ–¥—ã –∑–∞ [–ø–µ—Ä–∏–æ–¥]"
‚Ä¢ "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ [–Ω–∞–∑–≤–∞–Ω–∏–µ]"
‚Ä¢ "–¢–æ–ø –∫–∞—Ç–µ–≥–æ—Ä–∏–π"

üí≥ **–î–æ–ª–≥–∏:**
‚Ä¢ "–ö—Ç–æ –º–Ω–µ –¥–æ–ª–∂–µ–Ω"
‚Ä¢ "–ö–æ–º—É —è –¥–æ–ª–∂–µ–Ω"
‚Ä¢ "–î–∞–ª –≤ –¥–æ–ª–≥ [–∏–º—è] [—Å—É–º–º–∞]"

‚öôÔ∏è **–ù–∞—Å—Ç—Ä–æ–π–∫–∏:**
‚Ä¢ "–°–º–µ–Ω–∏ –≤–∞–ª—é—Ç—É –Ω–∞ [–≤–∞–ª—é—Ç–∞]"
‚Ä¢ "–ü–æ–º–µ–Ω—è–π —è–∑—ã–∫ –Ω–∞ [—è–∑—ã–∫]"

üì∏ **–§–û–¢–û –ß–ï–ö–û–í** (–∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ):
‚Ä¢ –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ —á–µ–∫–∞ - —è —Ä–∞—Å–ø–æ–∑–Ω–∞—é –≤—Å–µ —Ç–æ–≤–∞—Ä—ã –∏ —Ü–µ–Ω—ã
‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é —Ä–∞—Å—Ö–æ–¥–∞
‚Ä¢ –û–ø—Ä–µ–¥–µ–ª—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é –ø–æ–∫—É–ø–∫–∏
‚Ä¢ –ü–æ–∫–∞–∂—É –¥–µ—Ç–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é

üí° **–°–æ–≤–µ—Ç—ã:**
‚Ä¢ –î–ª—è –≥–æ–ª–æ—Å–∞: –≥–æ–≤–æ—Ä–∏—Ç–µ —á–µ—Ç–∫–æ –∏ –Ω–µ —Ç–æ—Ä–æ–ø—è—Å—å
‚Ä¢ –î–ª—è —Ñ–æ—Ç–æ: —Ö–æ—Ä–æ—à–µ–µ –æ—Å–≤–µ—â–µ–Ω–∏–µ, —á–µ—Ç–∫–∏–π —Ç–µ–∫—Å—Ç —á–µ–∫–∞
‚Ä¢ –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é —á–µ–∫–∏ –Ω–∞ —Ä—É—Å—Å–∫–æ–º, —É–∑–±–µ–∫—Å–∫–æ–º, –∞–Ω–≥–ª–∏–π—Å–∫–æ–º

üåç **–Ø–∑—ã–∫–∏:** —Ä—É—Å—Å–∫–∏–π, —É–∑–±–µ–∫—Å–∫–∏–π, –∞–Ω–≥–ª–∏–π—Å–∫–∏–π
        """
        
        await update.message.reply_text(help_message)
    
    async def balance_command(self, update: Update, context: CallbackContext):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /balance"""
        await update.message.reply_text(
            "üí∞ –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:\n"
            "üé§ \"–ü–æ–∫–∞–∂–∏ –º–æ–π –±–∞–ª–∞–Ω—Å\""
        )
    
    async def stats_command(self, update: Update, context: CallbackContext):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /stats"""
        await update.message.reply_text(
            "üìä –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:\n"
            "üé§ \"–ü–æ–∫–∞–∂–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É\" –∏–ª–∏ \"–ú–æ–∏ —Ä–∞—Å—Ö–æ–¥—ã\""
        )
    
    async def goals_command(self, update: Update, context: CallbackContext):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /goals"""
        await update.message.reply_text(
            "üéØ –î–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ü–µ–ª—è–º–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:\n"
            "üé§ \"–ü–æ–∫–∞–∂–∏ –º–æ–∏ —Ü–µ–ª–∏\" –∏–ª–∏ \"–°–æ–∑–¥–∞–π —Ü–µ–ª—å –Ω–∞–∫–æ–ø–∏—Ç—å [—Å—É–º–º–∞] –Ω–∞ [–Ω–∞–∑–≤–∞–Ω–∏–µ]\""
        )
    
    async def reminders_command(self, update: Update, context: CallbackContext):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /reminders"""
        await update.message.reply_text(
            "‚è∞ –î–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è–º–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:\n"
            "üé§ \"–ü–æ–∫–∞–∂–∏ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è\" –∏–ª–∏ \"–°–æ–∑–¥–∞–π –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ [—Ç–µ–∫—Å—Ç] –Ω–∞ [–≤—Ä–µ–º—è]\""
        )
    
    async def settings_command(self, update: Update, context: CallbackContext):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /settings"""
        await update.message.reply_text(
            "‚öôÔ∏è –î–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:\n"
            "üé§ \"–°–º–µ–Ω–∏ –≤–∞–ª—é—Ç—É –Ω–∞ –¥–æ–ª–ª–∞—Ä\" –∏–ª–∏ \"–ü–æ–º–µ–Ω—è–π —è–∑—ã–∫ –Ω–∞ —É–∑–±–µ–∫—Å–∫–∏–π\""
        )
    
    async def handle_text_message(self, update: Update, context: CallbackContext):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
        text = update.message.text.lower()
        
        # –ü—Ä–æ—Å—Ç—ã–µ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ –∫–æ–º–∞–Ω–¥—ã
        if any(word in text for word in ['–±–∞–ª–∞–Ω—Å', 'balance', 'balans']):
            await update.message.reply_text(
                "üí∞ –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ—á–Ω–æ–≥–æ –±–∞–ª–∞–Ω—Å–∞ –ª—É—á—à–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:\n"
                "üé§ \"–ü–æ–∫–∞–∂–∏ –º–æ–π –±–∞–ª–∞–Ω—Å\""
            )
        elif any(word in text for word in ['–ø–æ–º–æ—â—å', 'help', 'yordam']):
            await self.help_command(update, context)
        else:
            await update.message.reply_text(
                "üé§ **–û—Ç–ø—Ä–∞–≤—å—Ç–µ –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ** –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ñ–∏–Ω–∞–Ω—Å–∞–º–∏!\n\n"
                "üí° –ò–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—ã: /help, /balance, /goals, /stats\n\n"
                "üó£Ô∏è –ü—Ä–∏–º–µ—Ä—ã –≥–æ–ª–æ—Å–æ–≤—ã—Ö –∫–æ–º–∞–Ω–¥:\n"
                "‚Ä¢ \"–ü–æ–∫–∞–∂–∏ –±–∞–ª–∞–Ω—Å\"\n"
                "‚Ä¢ \"–î–æ–±–∞–≤—å —Ä–∞—Å—Ö–æ–¥ —Ö–ª–µ–± 5000\"\n"
                "‚Ä¢ \"–°–æ–∑–¥–∞–π —Ü–µ–ª—å –Ω–∞ –º–∞—à–∏–Ω—É\""
            )
    
    async def start_polling(self):
        """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ –≤ —Ä–µ–∂–∏–º–µ polling"""
        try:
            if not self.application:
                self.setup_bot()
            
            logger.info("–ó–∞–ø—É—Å–∫ Telegram Bot...")
            self.is_running = True
            
            # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
            await self.application.start()
            await self.application.updater.start_polling(
                allowed_updates=["message", "callback_query"]
            )
            
            logger.info("ü§ñ OvozPay Bot –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!")
            
            # –ñ–¥–µ–º –æ—Å—Ç–∞–Ω–æ–≤–∫–∏
            await self.application.updater.idle()
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞: {e}")
            raise
        finally:
            await self.stop()
    
    async def stop(self):
        """–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–æ—Ç–∞"""
        try:
            if self.application and self.is_running:
                logger.info("–û—Å—Ç–∞–Ω–æ–≤–∫–∞ Telegram Bot...")
                
                await self.application.updater.stop()
                await self.application.stop()
                await self.application.shutdown()
                
                self.is_running = False
                logger.info("Telegram Bot –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
                
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –±–æ—Ç–∞: {e}")


# –ì–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞
bot = OvozPayBot()


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞ –∏–∑ Django management command
async def run_bot():
    """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
    try:
        await bot.start_polling()
    except KeyboardInterrupt:
        logger.info("–ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –æ—Å—Ç–∞–Ω–æ–≤–∫–∏")
    except Exception as e:
        logger.error(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –±–æ—Ç–∞: {e}")
        raise
    finally:
        await bot.stop()


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å Django
def get_bot_application():
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–∞—Å—Ç—Ä–æ–µ–Ω–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –±–æ—Ç–∞ –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å Django"""
    return bot.setup_bot() 