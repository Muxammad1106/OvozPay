"""
Django management –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ Telegram –±–æ—Ç–∞
"""

import logging
import os
import sys
from django.core.management.base import BaseCommand
from django.conf import settings

from apps.bot.bot_v13 import run_bot


logger = logging.getLogger(__name__)


class Command(BaseCommand):
    help = '–ó–∞–ø—É—Å–∫ Telegram –±–æ—Ç–∞ OvozPay'
    
    def add_arguments(self, parser):
        parser.add_argument(
            '--debug',
            action='store_true',
            help='–í–∫–ª—é—á–∏—Ç—å –æ—Ç–ª–∞–¥–æ—á–Ω—ã–π —Ä–µ–∂–∏–º',
        )
    
    def handle(self, *args, **options):
        """–û—Å–Ω–æ–≤–Ω–æ–π –º–µ—Ç–æ–¥ –∫–æ–º–∞–Ω–¥—ã"""
        
        # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
        if options['debug']:
            logging.basicConfig(
                level=logging.DEBUG,
                format='%(asctime)s - %(name)s - %(levelname)s - %(message)s'
            )
        else:
            logging.basicConfig(
                level=logging.INFO,
                format='%(asctime)s - %(levelname)s - %(message)s'
            )
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ç–æ–∫–µ–Ω–∞
        bot_token = getattr(settings, 'TELEGRAM_BOT_TOKEN', None)
        if not bot_token:
            self.stdout.write(
                self.style.ERROR('TELEGRAM_BOT_TOKEN –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω!')
            )
            self.stdout.write(
                '–î–æ–±–∞–≤—å—Ç–µ TELEGRAM_BOT_TOKEN –≤ .env —Ñ–∞–π–ª –∏–ª–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è'
            )
            sys.exit(1)
        
        self.stdout.write(
            self.style.SUCCESS('üöÄ –ó–∞–ø—É—Å–∫ OvozPay Telegram Bot...')
        )
        
        self.stdout.write('üìã –§—É–Ω–∫—Ü–∏–∏ –±–æ—Ç–∞:')
        self.stdout.write('üé§ ‚Ä¢ –ì–æ–ª–æ—Å–æ–≤–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ñ–∏–Ω–∞–Ω—Å–∞–º–∏')
        self.stdout.write('üì∏ ‚Ä¢ –°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —á–µ–∫–æ–≤ (–¥–µ–º–æ-—Ä–µ–∂–∏–º)')
        self.stdout.write('üí∞ ‚Ä¢ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–æ—Ö–æ–¥–∞–º–∏ –∏ —Ä–∞—Å—Ö–æ–¥–∞–º–∏')
        self.stdout.write('üéØ ‚Ä¢ –¶–µ–ª–∏ –∏ –Ω–∞–∫–æ–ø–ª–µ–Ω–∏—è')
        self.stdout.write('üìä ‚Ä¢ –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –∏ –æ—Ç—á–µ—Ç—ã')
        self.stdout.write('')
        
        try:
            # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
            run_bot()
            
        except KeyboardInterrupt:
            self.stdout.write('\n‚õî –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–æ—Ç–∞...')
            
        except Exception as e:
            self.stdout.write(
                self.style.ERROR(f'‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞: {e}')
            )
            sys.exit(1)
        
        self.stdout.write(
            self.style.SUCCESS('‚úÖ –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω')
        ) 