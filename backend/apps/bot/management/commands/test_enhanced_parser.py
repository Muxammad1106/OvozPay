"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–≥–æ –ø–∞—Ä—Å–µ—Ä–∞ —Å —Ç–æ–≤–∞—Ä–∞–º–∏ –∏ –∫–æ–º–∞–Ω–¥–∞–º–∏ —É–¥–∞–ª–µ–Ω–∏—è
"""

from django.core.management.base import BaseCommand
from apps.bot.services.text_parser_service import TextParserService


class Command(BaseCommand):
    help = '–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –ø–∞—Ä—Å–µ—Ä —Ç–æ–≤–∞—Ä–æ–≤ –∏ –∫–æ–º–∞–Ω–¥—ã —É–¥–∞–ª–µ–Ω–∏—è'

    def handle(self, *args, **options):
        parser = TextParserService()
        
        self.stdout.write('\nüß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –†–ê–°–®–ò–†–ï–ù–ù–û–ì–û –ü–ê–†–°–ï–†–ê\n')
        
        # –¢–µ—Å—Ç—ã —Ç–æ–≤–∞—Ä–æ–≤ –∏ –ø—Ä–æ–¥—É–∫—Ç–æ–≤
        product_tests = [
            "–∫—É–ø–∏–ª –º–æ–ª–æ–∫–æ –∑–∞ 5000 —Å—É–º",
            "–ø–æ—Ç—Ä–∞—Ç–∏–ª 15000 –Ω–∞ —Ö–ª–µ–± –∏ –º–∞—Å–ª–æ",
            "–∫—É–ø–∏–ª —Å–∏–≥–∞—Ä–µ—Ç—ã –∑–∞ 20$", 
            "–∑–∞–ø–ª–∞—Ç–∏–ª –∑–∞ —è–±–ª–æ–∫–∏ 3000 —Å—É–º",
            "–ø–æ—Ç—Ä–∞—Ç–∏–ª –Ω–∞ –∫—Ä–æ—Å—Å–æ–≤–∫–∏ 50$",
            "–∫—É–ø–∏–ª –∫—É—Ä—Ç–∫—É –∑–∞ 100 –¥–æ–ª–ª–∞—Ä–æ–≤",
            "–∑–∞–ø–ª–∞—Ç–∏–ª –∑–∞ —Å—Ç—Ä–∏–∂–∫—É 25000 —Å—É–º",
            "–∫—É–ø–∏–ª –∫–Ω–∏–≥–∏ –¥–ª—è —É—á–µ–±—ã 30$",
            "–ø–æ—Ç—Ä–∞—Ç–∏–ª –Ω–∞ –∫–æ—Ä–º –¥–ª—è –∫–æ—Ç–∞ 8000 —Å—É–º",
            "–∑–∞–ø–ª–∞—Ç–∏–ª –∑–∞ —Ç–∞–∫—Å–∏ 15000 —Å—É–º"
        ]
        
        self.stdout.write('üì¶ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –¢–û–í–ê–†–û–í:')
        for test_text in product_tests:
            result = parser.parse_transaction_text(test_text, 'ru')
            if result:
                self.stdout.write(
                    f"‚úÖ '{test_text}' ‚Üí {result['category']} | {result['amount']} {result['currency']}"
                )
            else:
                self.stdout.write(self.style.ERROR(f"‚ùå '{test_text}' ‚Üí –ù–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–æ"))
        
        # –¢–µ—Å—Ç—ã –∫–æ–º–∞–Ω–¥ —É–¥–∞–ª–µ–Ω–∏—è
        delete_tests = [
            "—É–¥–∞–ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –ø—Ä–æ–¥—É–∫—Ç—ã",
            "—É–¥–∞–ª–∏—Ç—å —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é –º–æ–ª–æ–∫–æ", 
            "—É–±–µ—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é —Ç–∞–∫—Å–∏",
            "–æ—Ç–º–µ–Ω–∏ –æ–ø–µ—Ä–∞—Ü–∏—é —Ö–ª–µ–±",
            "delete category food",
            "remove transaction taxi",
            "kategoriyani o'chir transport",
            "tranzaksiyani o'chir sut"
        ]
        
        self.stdout.write('\nüóëÔ∏è –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ö–û–ú–ê–ù–î –£–î–ê–õ–ï–ù–ò–Ø:')
        for test_text in delete_tests:
            result = parser.parse_management_command(test_text, 'ru')
            if result:
                command_type = result['type']
                target = result.get('category_name') or result.get('target', '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')
                self.stdout.write(
                    f"‚úÖ '{test_text}' ‚Üí {command_type} | {target}"
                )
            else:
                self.stdout.write(self.style.ERROR(f"‚ùå '{test_text}' ‚Üí –ù–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–æ"))
        
        # –¢–µ—Å—Ç—ã –≤–∞–ª—é—Ç
        currency_tests = [
            "–ø–æ—Ç—Ä–∞—Ç–∏–ª 50 000 —Å—É–º –Ω–∞ –ø—Ä–æ–¥—É–∫—Ç—ã",
            "–∫—É–ø–∏–ª –∑–∞ 25.50$ –µ–¥—É",
            "–∑–∞–ø–ª–∞—Ç–∏–ª 100,5 –µ–≤—Ä–æ –∑–∞ –æ–¥–µ–∂–¥—É",
            "–ø–æ—Ç—Ä–∞—Ç–∏–ª 2000‚ÇΩ –Ω–∞ –±–µ–Ω–∑–∏–Ω",
            "–∫—É–ø–∏–ª –∑–∞ 15 –±–∞–∫—Å–æ–≤ —Å–∏–≥–∞—Ä–µ—Ç—ã"
        ]
        
        self.stdout.write('\nüí∞ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –í–ê–õ–Æ–¢:')
        for test_text in currency_tests:
            result = parser.parse_transaction_text(test_text, 'ru')
            if result:
                self.stdout.write(
                    f"‚úÖ '{test_text}' ‚Üí {result['amount']} {result['currency']}"
                )
            else:
                self.stdout.write(self.style.ERROR(f"‚ùå '{test_text}' ‚Üí –ù–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–æ"))
        
        self.stdout.write('\n‚ú® –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!') 