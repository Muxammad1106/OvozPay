"""
–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ UI –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
"""

import asyncio
import logging
from django.core.management.base import BaseCommand, CommandError
from django.conf import settings

from apps.bot.services.telegram_api_service import TelegramAPIService
from apps.bot.utils.translations import t

logger = logging.getLogger(__name__)


class Command(BaseCommand):
    """–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é –±–æ—Ç–∞"""
    
    help = '–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –Ω–æ–≤–æ–µ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é Telegram –±–æ—Ç–∞'
    
    def add_arguments(self, parser):
        parser.add_argument(
            '--chat-id',
            type=int,
            help='ID —á–∞—Ç–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –º–µ–Ω—é',
            required=True
        )
        parser.add_argument(
            '--language',
            type=str,
            default='ru',
            choices=['ru', 'en', 'uz'],
            help='–Ø–∑—ã–∫ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è (ru/en/uz)'
        )
    
    def handle(self, *args, **options):
        """–û—Å–Ω–æ–≤–Ω–æ–π –º–µ—Ç–æ–¥ –∫–æ–º–∞–Ω–¥—ã"""
        
        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–∫–µ–Ω
            token = getattr(settings, 'TELEGRAM_BOT_TOKEN', '')
            if not token:
                raise CommandError(
                    "‚ùå TELEGRAM_BOT_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö"
                )
            
            chat_id = options['chat_id']
            language = options['language']
            
            self.stdout.write(
                self.style.SUCCESS(f"üöÄ –¢–µ—Å—Ç–∏—Ä—É–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –¥–ª—è —á–∞—Ç–∞ {chat_id} –Ω–∞ —è–∑—ã–∫–µ {language}")
            )
            
            # –ó–∞–ø—É—Å–∫–∞–µ–º –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é
            asyncio.run(self._test_menu_ui(chat_id, language))
            
        except Exception as e:
            raise CommandError(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    async def _test_menu_ui(self, chat_id: int, language: str):
        """–ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ UI"""
        
        telegram_api = TelegramAPIService()
        
        try:
            # 1. –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
            welcome_text = t.get_text('start_welcome', language)
            await telegram_api.send_message(
                chat_id=chat_id,
                text=f"üß™ **–¢–ï–°–¢ UI –û–ë–ù–û–í–õ–ï–ù–ò–Ø**\n\n{welcome_text}",
                parse_mode='Markdown'
            )
            
            # 2. –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
            menu_text = t.get_text('main_menu', language)
            await telegram_api.send_message(
                chat_id=chat_id,
                text=menu_text,
                reply_markup=t.get_main_menu_keyboard(language)
            )
            
            # 3. –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è—Ö
            updates_text = f"""
‚úÖ **–û–ë–ù–û–í–õ–ï–ù–ò–Ø UI –ó–ê–í–ï–†–®–ï–ù–´**

üîÑ **–ß—Ç–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ:**

1. **–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —Å –∫–Ω–æ–ø–∫–∞–º–∏**
   üìã –ü–æ–ª–Ω–æ—Ü–µ–Ω–Ω–æ–µ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–µ –º–µ–Ω—é
   üí∞ –ë–∞–ª–∞–Ω—Å | üìä –ò—Å—Ç–æ—Ä–∏—è
   üìÇ –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ | üéØ –¶–µ–ª–∏ 
   üí∏ –î–æ–ª–≥–∏ | ‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏
   ‚ùì –ü–æ–º–æ—â—å

2. **–ê–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π**
   üé§ "–û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é..." ‚Üí —Ä–µ–∑—É–ª—å—Ç–∞—Ç
   üìù –ù–∏–∫–∞–∫–æ–≥–æ –∑–∞—Å–æ—Ä–µ–Ω–∏—è —á–∞—Ç–∞

3. **–ö–æ–º–∞–Ω–¥—ã**
   /menu - –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
   /balance - –±–∞–ª–∞–Ω—Å  
   /settings - –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
   /help - —Å–ø—Ä–∞–≤–∫–∞

4. **–ì–æ–ª–æ—Å–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è**
   ‚úÖ –†–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç
   üîÑ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
   
**–ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –≤—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏!** üöÄ
            """
            
            await telegram_api.send_message(
                chat_id=chat_id,
                text=updates_text,
                parse_mode='Markdown'
            )
            
            self.stdout.write(
                self.style.SUCCESS("‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
            )
            
        except Exception as e:
            self.stdout.write(
                self.style.ERROR(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏: {e}")
            )
            raise 