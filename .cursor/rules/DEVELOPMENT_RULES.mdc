# –ü–†–ê–í–ò–õ–ê –†–ê–ó–†–ê–ë–û–¢–ö–ò –ü–†–û–ï–ö–¢–ê OVOZPAY

## –í–µ—Ä—Å–∏—è: 1.0
## –î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è: 2024
## –°—Ç–∞—Ç—É—Å: –ê–∫—Ç–∏–≤–Ω—ã–µ –ø—Ä–∞–≤–∏–ª–∞ –¥–ª—è –≤—Å–µ–π –∫–æ–º–∞–Ω–¥—ã —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏

---

## üìã –°–û–î–ï–†–ñ–ê–ù–ò–ï

1. [–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞](#–∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞-–∏-—Å—Ç—Ä—É–∫—Ç—É—Ä–∞-–ø—Ä–æ–µ–∫—Ç–∞)
2. [Django –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –∏ –º–æ–¥–µ–ª–∏](#django-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è-–∏-–º–æ–¥–µ–ª–∏)
3. [Telegram Bot –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞](#telegram-bot-–∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞)
4. [–¢–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π —Å—Ç–µ–∫](#—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π-—Å—Ç–µ–∫)
5. [–ü—Ä–∞–≤–∏–ª–∞ –Ω–∞–ø–∏—Å–∞–Ω–∏—è –∫–æ–¥–∞](#–ø—Ä–∞–≤–∏–ª–∞-–Ω–∞–ø–∏—Å–∞–Ω–∏—è-–∫–æ–¥–∞)
6. [–°–µ—Ä–≤–∏—Å—ã –∏ API –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏](#—Å–µ—Ä–≤–∏—Å—ã-–∏-api-–∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏)
7. [–°–∏—Å—Ç–µ–º–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≥–æ–ª–æ—Å–∞ –∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π](#—Å–∏—Å—Ç–µ–º–∞-–æ–±—Ä–∞–±–æ—Ç–∫–∏-–≥–æ–ª–æ—Å–∞-–∏-–∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π)
8. [–§–∏–Ω–∞–Ω—Å–æ–≤–∞—è –ª–æ–≥–∏–∫–∞](#—Ñ–∏–Ω–∞–Ω—Å–æ–≤–∞—è-–ª–æ–≥–∏–∫–∞)
9. [–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ](#—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ)
10. [–î–µ–ø–ª–æ–π –∏ CI/CD](#–¥–µ–ø–ª–æ–π-–∏-cicd)

---

## 1. –ê–†–•–ò–¢–ï–ö–¢–£–†–ê –ò –°–¢–†–£–ö–¢–£–†–ê –ü–†–û–ï–ö–¢–ê

### 1.1 –ö–æ—Ä–Ω–µ–≤–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞

```
OvozPay/
‚îú‚îÄ‚îÄ backend/                 # Django backend
‚îÇ   ‚îú‚îÄ‚îÄ apps/               # Django –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
‚îÇ   ‚îú‚îÄ‚îÄ config/             # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Django
‚îÇ   ‚îú‚îÄ‚îÄ services/           # –í–Ω–µ—à–Ω–∏–µ —Å–µ—Ä–≤–∏—Å—ã (AI, API)
‚îÇ   ‚îú‚îÄ‚îÄ docs/               # –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è API
‚îÇ   ‚îú‚îÄ‚îÄ docker/             # Docker –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
‚îÇ   ‚îî‚îÄ‚îÄ manage.py           # Django CLI
‚îú‚îÄ‚îÄ DEPLOYMENT_INSTRUCTIONS.md
‚îú‚îÄ‚îÄ DEEPSEEK_MIGRATION_SUMMARY.md
‚îî‚îÄ‚îÄ README_TELEGRAM_BOT_TESTING.md
```

### 1.2 –ü—Ä–∏–Ω—Ü–∏–ø—ã –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã

- **–ú–æ–¥—É–ª—å–Ω–æ—Å—Ç—å**: –ö–∞–∂–¥–æ–µ Django –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ —Å–≤–æ–π –¥–æ–º–µ–Ω
- **–°–ª–æ–∏—Å—Ç–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞**: Models ‚Üí Services ‚Üí Views ‚Üí API
- **–†–∞–∑–¥–µ–ª–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏**: –ë–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫–∞ –≤ —Å–µ—Ä–≤–∏—Å–∞—Ö, UI –ª–æ–≥–∏–∫–∞ –≤ handlers
- **–ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ—Å—Ç—å**: –ü–æ–¥–¥–µ—Ä–∂–∫–∞ async/await –¥–ª—è –≤–Ω–µ—à–Ω–∏—Ö API
- **–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ**: –î–µ—Ç–∞–ª—å–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Å–µ—Ö –æ–ø–µ—Ä–∞—Ü–∏–π

---

## 2. DJANGO –ü–†–ò–õ–û–ñ–ï–ù–ò–Ø –ò –ú–û–î–ï–õ–ò

### 2.1 –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π

**–û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:**
- `users/` - –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏, –Ω–∞—Å—Ç—Ä–æ–π–∫–∏, —Ä–µ—Ñ–µ—Ä–∞–ª—ã
- `transactions/` - –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏, –¥–æ–ª–≥–∏, –æ–ø–µ—Ä–∞—Ü–∏–∏
- `categories/` - –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–æ—Ö–æ–¥–æ–≤/—Ä–∞—Å—Ö–æ–¥–æ–≤
- `bot/` - Telegram –±–æ—Ç, –∫–æ–º–∞–Ω–¥—ã, —Å–µ—Å—Å–∏–∏
- `goals/` - –§–∏–Ω–∞–Ω—Å–æ–≤—ã–µ —Ü–µ–ª–∏
- `reminders/` - –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
- `analytics/` - –û—Ç—á—ë—Ç—ã –∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∞
- `sources/` - –ò—Å—Ç–æ—á–Ω–∏–∫–∏ —Ç—Ä–∞—Ñ–∏–∫–∞
- `broadcast/` - –ú–∞—Å—Å–æ–≤—ã–µ —Ä–∞—Å—Å—ã–ª–∫–∏
- `ai/` - AI –æ–±—Ä–∞–±–æ—Ç–∫–∞ (–≥–æ–ª–æ—Å, –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è)
- `core/` - –ë–∞–∑–æ–≤—ã–µ –º–æ–¥–µ–ª–∏ –∏ —É—Ç–∏–ª–∏—Ç—ã
- `settings/` - –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∏—Å—Ç–µ–º—ã

### 2.2 –°—Ç—Ä—É–∫—Ç—É—Ä–∞ Django –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è

```
apps/example_app/
‚îú‚îÄ‚îÄ models.py               # –ú–æ–¥–µ–ª–∏ –¥–∞–Ω–Ω—ã—Ö
‚îú‚îÄ‚îÄ serializers/            # DRF —Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ç–æ—Ä—ã
‚îú‚îÄ‚îÄ views/                  # API views
‚îú‚îÄ‚îÄ services/               # –ë–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫–∞
‚îú‚îÄ‚îÄ utils/                  # –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
‚îú‚îÄ‚îÄ permissions/            # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –ø—Ä–∞–≤–∞
‚îú‚îÄ‚îÄ tests/                  # –¢–µ—Å—Ç—ã
‚îú‚îÄ‚îÄ migrations/             # –ú–∏–≥—Ä–∞—Ü–∏–∏ –ë–î
‚îú‚îÄ‚îÄ management/             # Django –∫–æ–º–∞–Ω–¥—ã
‚îú‚îÄ‚îÄ admin.py                # Django Admin
‚îú‚îÄ‚îÄ apps.py                 # –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
‚îú‚îÄ‚îÄ urls.py                 # URL –º–∞—Ä—à—Ä—É—Ç—ã
‚îî‚îÄ‚îÄ __init__.py
```

### 2.3 –ë–∞–∑–æ–≤—ã–µ –º–æ–¥–µ–ª–∏

**–í—Å–µ –º–æ–¥–µ–ª–∏ –Ω–∞—Å–ª–µ–¥—É—é—Ç—Å—è –æ—Ç `BaseModel`:**

```python
from apps.core.models import BaseModel
import uuid

class ExampleModel(BaseModel):
    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)
    # –æ—Å—Ç–∞–ª—å–Ω—ã–µ –ø–æ–ª—è...
    
    class Meta:
        ordering = ('-created_at',)
        verbose_name = '–ü—Ä–∏–º–µ—Ä'
        verbose_name_plural = '–ü—Ä–∏–º–µ—Ä—ã'
```

### 2.4 –û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è –º–æ–¥–µ–ª–∏

- `id` - UUIDField (primary key)
- `created_at` - –î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è (–∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏)
- `updated_at` - –î–∞—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è (–∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏)
- –ò–Ω–¥–µ–∫—Å—ã –¥–ª—è —á–∞—Å—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã—Ö –ø–æ–ª–µ–π
- `verbose_name` –∏ `verbose_name_plural`
- `ordering` –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é

---

## 3. TELEGRAM BOT –ê–†–•–ò–¢–ï–ö–¢–£–†–ê

### 3.1 –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –±–æ—Ç–∞

```
apps/bot/
‚îú‚îÄ‚îÄ telegram/
‚îÇ   ‚îú‚îÄ‚îÄ bot_client.py       # –û—Å–Ω–æ–≤–Ω–æ–π –∫–ª–∏–µ–Ω—Ç –±–æ—Ç–∞
‚îÇ   ‚îú‚îÄ‚îÄ webhook_view.py     # Django view –¥–ª—è webhook
‚îÇ   ‚îú‚îÄ‚îÄ handlers/           # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥ –∏ —Å–æ–æ–±—â–µ–Ω–∏–π
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ basic_handlers.py
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ voice_handlers.py
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ transaction_handlers.py
‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ ...
‚îÇ   ‚îî‚îÄ‚îÄ services/           # –°–µ—Ä–≤–∏—Å—ã Telegram API
‚îÇ       ‚îî‚îÄ‚îÄ telegram_api_service.py
‚îú‚îÄ‚îÄ models.py               # –ú–æ–¥–µ–ª–∏ —Å–µ—Å—Å–∏–π, –ª–æ–≥–æ–≤
‚îú‚îÄ‚îÄ services/               # –ë–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫–∞ –±–æ—Ç–∞
‚îî‚îÄ‚îÄ utils/                  # –£—Ç–∏–ª–∏—Ç—ã –±–æ—Ç–∞
```

### 3.2 –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π

**–ü—Ä–∏–Ω—Ü–∏–ø—ã –æ–±—Ä–∞–±–æ—Ç–∫–∏:**
- –í—Å–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–µ (`async def`)
- –ò—Å–ø–æ–ª—å–∑—É–µ–º threading –¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞
- –î–µ—Ç–∞–ª—å–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–∞–∂–¥–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
- Graceful error handling —Å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

**–ü—Ä–∏–º–µ—Ä –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞:**

```python
async def handle_command(self, update: Dict[str, Any]) -> None:
    try:
        # –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ
        message = update.get('message', {})
        chat_id = message.get('chat', {}).get('id')
        
        # –ë–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫–∞
        result = await self.some_service.process()
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç
        await self.telegram_api.send_message(chat_id, result)
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ handle_command: {e}")
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
```

### 3.3 –ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞

**–ë–∞–∑–æ–≤—ã–µ –∫–æ–º–∞–Ω–¥—ã:**
- `/start` - –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è/–ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
- `/balance` - –¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å
- `/help` - –°–ø—Ä–∞–≤–∫–∞
- `/phone` - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω–∞

**–ë—É–¥—É—â–∏–µ –∫–æ–º–∞–Ω–¥—ã (22 —Ñ—É–Ω–∫—Ü–∏–∏):**
- –ì–æ–ª–æ—Å–æ–≤—ã–µ –∫–æ–º–∞–Ω–¥—ã (—Ä–∞—Å—Ö–æ–¥—ã/–¥–æ—Ö–æ–¥—ã)
- –§–æ—Ç–æ —á–µ–∫–æ–≤
- –ò—Å—Ç–æ—Ä–∏—è –æ–ø–µ—Ä–∞—Ü–∏–π
- –û—Ç—á—ë—Ç—ã
- –î–æ–ª–≥–∏
- –¶–µ–ª–∏
- –ù–∞—Å—Ç—Ä–æ–π–∫–∏

---

## 4. –¢–ï–•–ù–û–õ–û–ì–ò–ß–ï–°–ö–ò–ô –°–¢–ï–ö

### 4.1 Backend —Ñ—Ä–µ–π–º–≤–æ—Ä–∫

- **Django 5.0.3** - –û—Å–Ω–æ–≤–Ω–æ–π –≤–µ–±-—Ñ—Ä–µ–π–º–≤–æ—Ä–∫
- **Django REST Framework 3.15.0** - API
- **PostgreSQL** - –û—Å–Ω–æ–≤–Ω–∞—è –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö
- **Redis** (–ø–ª–∞–Ω–∏—Ä—É–µ—Ç—Å—è) - –ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –æ—á–µ—Ä–µ–¥–∏

### 4.2 Telegram –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è

- **aiogram 3.4.1** - Telegram Bot API
- **aiohttp 3.9.3** - –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–µ HTTP –∑–∞–ø—Ä–æ—Å—ã

### 4.3 AI –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö

- **OpenAI Whisper** (–ª–æ–∫–∞–ª—å–Ω–æ) - Speech-to-Text
- **EasyOCR** (–ª–æ–∫–∞–ª—å–Ω–æ) - –†–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
- **DeepSeek API** (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ) - –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è AI –æ–±—Ä–∞–±–æ—Ç–∫–∞

### 4.4 –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏

- **django-cors-headers** - CORS
- **Pillow** - –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
- **python-dotenv** - –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
- **drf-yasg** - –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è API
- **django-jazzmin** - –£–ª—É—á—à–µ–Ω–Ω–∞—è –∞–¥–º–∏–Ω–∫–∞

---

## 5. –ü–†–ê–í–ò–õ–ê –ù–ê–ü–ò–°–ê–ù–ò–Ø –ö–û–î–ê

### 5.1 –û–±—â–∏–µ –ø—Ä–∏–Ω—Ü–∏–ø—ã

- **PEP 8** - –°—Ç–∞–Ω–¥–∞—Ä—Ç –∫–æ–¥–∞ Python
- **Type hints** - –û–±—è–∑–∞—Ç–µ–ª—å–Ω–∞—è —Ç–∏–ø–∏–∑–∞—Ü–∏—è
- **Docstrings** - –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è —Ñ—É–Ω–∫—Ü–∏–π –∏ –∫–ª–∞—Å—Å–æ–≤
- **Single Responsibility** - –û–¥–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è = –æ–¥–Ω–∞ –∑–∞–¥–∞—á–∞
- **DRY** - Don't Repeat Yourself

### 5.2 –ò–º–µ–Ω–æ–≤–∞–Ω–∏–µ

```python
# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏ —Ñ—É–Ω–∫—Ü–∏–∏ - snake_case
user_balance = get_user_balance()

# –ö–ª–∞—Å—Å—ã - PascalCase
class TransactionService:
    pass

# –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã - UPPER_SNAKE_CASE
API_TIMEOUT = 30

# Private –º–µ—Ç–æ–¥—ã - –Ω–∞—á–∏–Ω–∞—é—Ç—Å—è —Å _
def _internal_method(self):
    pass
```

### 5.3 –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ñ—É–Ω–∫—Ü–∏–π

```python
async def process_voice_message(
    audio_file_path: str,
    user_id: str,
    language: str = 'ru'
) -> Optional[Dict[str, Any]]:
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    
    Args:
        audio_file_path: –ü—É—Ç—å –∫ –∞—É–¥–∏–æ —Ñ–∞–π–ª—É
        user_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        language: –Ø–∑—ã–∫ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è
        
    Returns:
        –†–µ–∑—É–ª—å—Ç–∞—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏–ª–∏ None –ø—Ä–∏ –æ—à–∏–±–∫–µ
        
    Raises:
        ProcessingError: –ü—Ä–∏ –æ—à–∏–±–∫–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏
    """
    try:
        # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞—á–∞–ª–∞
        logger.info(f"–ù–∞—á–∏–Ω–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –≥–æ–ª–æ—Å–∞ –¥–ª—è {user_id}")
        
        # –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞
        result = await voice_service.transcribe(audio_file_path, language)
        
        # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —É—Å–ø–µ—Ö–∞
        logger.info(f"–ì–æ–ª–æ—Å –æ–±—Ä–∞–±–æ—Ç–∞–Ω —É—Å–ø–µ—à–Ω–æ: {len(result)} —Å–∏–º–≤–æ–ª–æ–≤")
        
        return result
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≥–æ–ª–æ—Å–∞: {e}")
        raise ProcessingError(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –≥–æ–ª–æ—Å: {e}")
```

### 5.4 –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫

```python
# –ü—Ä–∞–≤–∏–ª—å–Ω–æ - —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –∏—Å–∫–ª—é—á–µ–Ω–∏—è
try:
    result = risky_operation()
except ConnectionError as e:
    logger.error(f"–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è: {e}")
    return {"error": "connection_failed"}
except ValidationError as e:
    logger.warning(f"–û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏: {e}")
    return {"error": "invalid_data"}
except Exception as e:
    logger.error(f"–ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
    return {"error": "internal_error"}

# –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ - –æ–±—â–∏–π except
try:
    result = risky_operation()
except:
    pass  # –ù–ò–ö–û–ì–î–ê —Ç–∞–∫ –Ω–µ –¥–µ–ª–∞—Ç—å!
```

---

## 6. –°–ï–†–í–ò–°–´ –ò API –ò–ù–¢–ï–ì–†–ê–¶–ò–ò

### 6.1 –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Å–µ—Ä–≤–∏—Å–æ–≤

**–ì–ª–æ–±–∞–ª—å–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã:**

```
services/
‚îú‚îÄ‚îÄ deepseek_ai.py          # DeepSeek API
‚îú‚îÄ‚îÄ whisper_service.py      # –õ–æ–∫–∞–ª—å–Ω—ã–π Whisper
‚îú‚îÄ‚îÄ ocr_service.py          # EasyOCR
‚îú‚îÄ‚îÄ currency_service.py     # –ö—É—Ä—Å—ã –≤–∞–ª—é—Ç
‚îî‚îÄ‚îÄ notification_service.py # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
```

**–°–µ—Ä–≤–∏—Å—ã –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π:**

```
apps/transactions/services/
‚îú‚îÄ‚îÄ transaction_service.py  # –°–æ–∑–¥–∞–Ω–∏–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
‚îú‚îÄ‚îÄ parser_service.py       # –ü–∞—Ä—Å–∏–Ω–≥ —Ç–µ–∫—Å—Ç–∞
‚îî‚îÄ‚îÄ validation_service.py   # –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö
```

### 6.2 –ü–∞—Ç—Ç–µ—Ä–Ω —Å–µ—Ä–≤–∏—Å–æ–≤

```python
class TransactionService:
    """–°–µ—Ä–≤–∏—Å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è–º–∏"""
    
    def __init__(self):
        self.parser = TextParserService()
        self.validator = ValidationService()
    
    async def create_from_text(
        self, 
        text: str, 
        user_id: str
    ) -> Transaction:
        """–°–æ–∑–¥–∞—ë—Ç —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é –∏–∑ —Ç–µ–∫—Å—Ç–∞"""
        # 1. –ü–∞—Ä—Å–∏–Ω–≥
        parsed_data = self.parser.parse_transaction_text(text)
        
        # 2. –í–∞–ª–∏–¥–∞—Ü–∏—è
        if not self.validator.validate_transaction(parsed_data):
            raise ValidationError("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ")
        
        # 3. –°–æ–∑–¥–∞–Ω–∏–µ
        transaction = await Transaction.objects.acreate(**parsed_data)
        
        return transaction
```

### 6.3 –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ—Å—Ç—å

```python
# –ü—Ä–∞–≤–∏–ª—å–Ω–æ - async/await –¥–ª—è I/O –æ–ø–µ—Ä–∞—Ü–∏–π
async def external_api_call():
    async with httpx.AsyncClient() as client:
        response = await client.get(url)
        return response.json()

# –ü—Ä–∞–≤–∏–ª—å–Ω–æ - sync_to_async –¥–ª—è Django ORM
from asgiref.sync import sync_to_async

@sync_to_async
def get_user_transactions(user_id):
    return list(Transaction.objects.filter(user_id=user_id))
```

---

## 7. –°–ò–°–¢–ï–ú–ê –û–ë–†–ê–ë–û–¢–ö–ò –ì–û–õ–û–°–ê –ò –ò–ó–û–ë–†–ê–ñ–ï–ù–ò–ô

### 7.1 –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ AI —Å–µ—Ä–≤–∏—Å–æ–≤

```
services/ai/
‚îú‚îÄ‚îÄ voice_recognition/
‚îÇ   ‚îú‚îÄ‚îÄ whisper_service.py     # –û—Å–Ω–æ–≤–Ω–æ–π —Å–µ—Ä–≤–∏—Å
‚îÇ   ‚îú‚îÄ‚îÄ audio_processor.py     # –ü—Ä–µ–¥–æ–±—Ä–∞–±–æ—Ç–∫–∞ –∞—É–¥–∏–æ
‚îÇ   ‚îî‚îÄ‚îÄ models/                # –ú–æ–¥–µ–ª–∏ Whisper
‚îú‚îÄ‚îÄ ocr/
‚îÇ   ‚îú‚îÄ‚îÄ easyocr_service.py     # –†–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞
‚îÇ   ‚îú‚îÄ‚îÄ image_processor.py     # –ü—Ä–µ–¥–æ–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
‚îÇ   ‚îî‚îÄ‚îÄ receipt_parser.py      # –ü–∞—Ä—Å–∏–Ω–≥ —á–µ–∫–æ–≤
‚îî‚îÄ‚îÄ text_processing/
    ‚îú‚îÄ‚îÄ nlp_service.py         # –û–±—Ä–∞–±–æ—Ç–∫–∞ –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —è–∑—ã–∫–∞
    ‚îú‚îÄ‚îÄ amount_extractor.py    # –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ —Å—É–º–º
    ‚îî‚îÄ‚îÄ category_classifier.py # –ö–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π
```

### 7.2 –û–±—Ä–∞–±–æ—Ç–∫–∞ –≥–æ–ª–æ—Å–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π

**–ü–∞–π–ø–ª–∞–π–Ω –æ–±—Ä–∞–±–æ—Ç–∫–∏:**

1. **–ü–æ–ª—É—á–µ–Ω–∏–µ –∞—É–¥–∏–æ** ‚Üí Telegram API
2. **–ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è** ‚Üí WAV/MP3 format
3. **–†–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ** ‚Üí Whisper (–ª–æ–∫–∞–ª—å–Ω–æ)
4. **–ü–∞—Ä—Å–∏–Ω–≥** ‚Üí NLP –æ–±—Ä–∞–±–æ—Ç–∫–∞
5. **–°–æ–∑–¥–∞–Ω–∏–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏** ‚Üí Django ORM
6. **–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è** ‚Üí Telegram

**–ü—Ä–∏–º–µ—Ä –∫–æ–¥–∞:**

```python
async def process_voice_command(audio_file_path: str, user_id: str):
    """–ü–æ–ª–Ω—ã–π –ø–∞–π–ø–ª–∞–π–Ω –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≥–æ–ª–æ—Å–æ–≤–æ–π –∫–æ–º–∞–Ω–¥—ã"""
    
    # 1. –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ –ë–î
    voice_log = await VoiceCommandLog.objects.acreate(
        user_id=user_id,
        status='processing'
    )
    
    try:
        # 2. –†–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ —Ä–µ—á–∏
        text = await whisper_service.transcribe(audio_file_path)
        voice_log.text = text
        
        # 3. –ü–∞—Ä—Å–∏–Ω–≥ –∫–æ–º–∞–Ω–¥—ã
        parsed = await nlp_service.parse_transaction(text)
        voice_log.command_type = parsed['type']
        voice_log.extracted_amount = parsed['amount']
        
        # 4. –°–æ–∑–¥–∞–Ω–∏–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
        transaction = await transaction_service.create(parsed, user_id)
        voice_log.created_transaction_id = transaction.id
        
        # 5. –£—Å–ø–µ—Ö
        voice_log.status = 'success'
        await voice_log.asave()
        
        return transaction
        
    except Exception as e:
        voice_log.status = 'failed'
        voice_log.error_message = str(e)
        await voice_log.asave()
        raise
```

### 7.3 –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π —á–µ–∫–æ–≤

**–ü–∞–π–ø–ª–∞–π–Ω OCR:**

1. **–ü–æ–ª—É—á–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è** ‚Üí Telegram API
2. **–ü—Ä–µ–¥–æ–±—Ä–∞–±–æ—Ç–∫–∞** ‚Üí –£–ª—É—á—à–µ–Ω–∏–µ –∫–∞—á–µ—Å—Ç–≤–∞
3. **OCR —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ** ‚Üí EasyOCR
4. **–ü–∞—Ä—Å–∏–Ω–≥ –¥–∞–Ω–Ω—ã—Ö** ‚Üí –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ —Å—É–º–º—ã, –¥–∞—Ç—ã, —Ç–æ–≤–∞—Ä–æ–≤
5. **–°–æ–∑–¥–∞–Ω–∏–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π** ‚Üí –ú–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏
6. **–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ** ‚Üí –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Å –¥–µ—Ç–∞–ª—è–º–∏

---

## 8. –§–ò–ù–ê–ù–°–û–í–ê–Ø –õ–û–ì–ò–ö–ê

### 8.1 –¢–∏–ø—ã –æ–ø–µ—Ä–∞—Ü–∏–π

```python
# –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
TRANSACTION_TYPES = [
    ('income', '–î–æ—Ö–æ–¥'),
    ('expense', '–†–∞—Å—Ö–æ–¥'),
]

# –î–æ–ª–≥–∏
DEBT_DIRECTIONS = [
    ('from_me', '–Ø –¥–∞–ª –≤ –¥–æ–ª–≥'),
    ('to_me', '–ú–Ω–µ –¥–∞–ª–∏ –≤ –¥–æ–ª–≥'),
]

# –í–∞–ª—é—Ç—ã
CURRENCIES = [
    ('UZS', '–°—É–º'),
    ('USD', '–î–æ–ª–ª–∞—Ä –°–®–ê'),
    ('RUB', '–†–æ—Å—Å–∏–π—Å–∫–∏–π —Ä—É–±–ª—å'),
    ('EUR', '–ï–≤—Ä–æ'),
]
```

### 8.2 –ë–∏–∑–Ω–µ—Å-–ø—Ä–∞–≤–∏–ª–∞

**–¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏:**
- –°—É–º–º–∞ –≤—Å–µ–≥–¥–∞ > 0
- –û–±—è–∑–∞—Ç–µ–ª—å–Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—è (–∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∏–ª–∏ —Ä—É—á–Ω–∞—è)
- –î–∞—Ç–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤ –±—É–¥—É—â–µ–º (>1 –¥–µ–Ω—å)
- –û–ø–∏—Å–∞–Ω–∏–µ –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ, –Ω–æ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è

**–î–æ–ª–≥–∏:**
- –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è (–∫–æ–º—É –¥–∞–ª / —É –∫–æ–≥–æ –≤–∑—è–ª)
- –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è (30+ –¥–Ω–µ–π)
- –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —á–∞—Å—Ç–∏—á–Ω–æ–≥–æ –ø–æ–≥–∞—à–µ–Ω–∏—è

**–ö–∞—Ç–µ–≥–æ—Ä–∏–∏:**
- –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ + —Å–∏—Å—Ç–µ–º–Ω—ã–µ
- –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—è –ø–æ –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º
- –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º

### 8.3 –í–∞–ª—é—Ç–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏

```python
class CurrencyService:
    """–°–µ—Ä–≤–∏—Å —Ä–∞–±–æ—Ç—ã —Å –≤–∞–ª—é—Ç–∞–º–∏"""
    
    async def get_exchange_rate(self, from_currency: str, to_currency: str):
        """–ü–æ–ª—É—á–∞–µ—Ç –∫—É—Ä—Å –≤–∞–ª—é—Ç –æ—Ç –¶–ë –£–∑–±–µ–∫–∏—Å—Ç–∞–Ω–∞"""
        # –ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞ 1 —á–∞—Å
        # API –¶–ë –£–∑–±–µ–∫–∏—Å—Ç–∞–Ω–∞
        pass
    
    async def convert_amount(
        self, 
        amount: Decimal, 
        from_currency: str, 
        to_currency: str
    ):
        """–ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ—Ç —Å—É–º–º—É –º–µ–∂–¥—É –≤–∞–ª—é—Ç–∞–º–∏"""
        if from_currency == to_currency:
            return amount
        
        rate = await self.get_exchange_rate(from_currency, to_currency)
        return amount * rate
```

---

## 9. –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï

### 9.1 –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç–µ—Å—Ç–æ–≤

```
apps/example_app/tests/
‚îú‚îÄ‚îÄ test_models.py          # –¢–µ—Å—Ç—ã –º–æ–¥–µ–ª–µ–π
‚îú‚îÄ‚îÄ test_services.py        # –¢–µ—Å—Ç—ã –±–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫–∏
‚îú‚îÄ‚îÄ test_views.py           # –¢–µ—Å—Ç—ã API
‚îú‚îÄ‚îÄ test_bot_handlers.py    # –¢–µ—Å—Ç—ã Telegram –±–æ—Ç–∞
‚îî‚îÄ‚îÄ fixtures/               # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    ‚îú‚îÄ‚îÄ users.json
    ‚îî‚îÄ‚îÄ transactions.json
```

### 9.2 –¢–∏–ø—ã —Ç–µ—Å—Ç–æ–≤

**Unit —Ç–µ—Å—Ç—ã:**
- –ú–æ–¥–µ–ª–∏ Django
- –°–µ—Ä–≤–∏—Å—ã –∏ —É—Ç–∏–ª–∏—Ç—ã
- –ü–∞—Ä—Å–µ—Ä—ã –∏ –≤–∞–ª–∏–¥–∞—Ç–æ—Ä—ã

**Integration —Ç–µ—Å—Ç—ã:**
- API endpoints
- Telegram bot handlers
- –í–Ω–µ—à–Ω–∏–µ —Å–µ—Ä–≤–∏—Å—ã (mock)

**E2E —Ç–µ—Å—Ç—ã:**
- –ü–æ–ª–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏
- Telegram bot workflow

### 9.3 –ü—Ä–∏–º–µ—Ä —Ç–µ—Å—Ç–∞

```python
import pytest
from django.test import TestCase
from apps.transactions.services import TransactionService
from apps.users.models import User

class TestTransactionService(TestCase):
    
    def setUp(self):
        self.user = User.objects.create(
            phone_number='+998901234567',
            telegram_chat_id=123456789
        )
        self.service = TransactionService()
    
    async def test_create_expense_from_text(self):
        """–¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è —Ä–∞—Å—Ö–æ–¥–∞ –∏–∑ —Ç–µ–∫—Å—Ç–∞"""
        text = "–ø–æ—Ç—Ä–∞—Ç–∏–ª 50000 —Å—É–º –Ω–∞ –ø—Ä–æ–¥—É–∫—Ç—ã"
        
        transaction = await self.service.create_from_text(text, self.user.id)
        
        self.assertEqual(transaction.type, 'expense')
        self.assertEqual(transaction.amount, 50000)
        self.assertEqual(transaction.user, self.user)
```

---

## 10. –î–ï–ü–õ–û–ô –ò CI/CD

### 10.1 –û–∫—Ä—É–∂–µ–Ω–∏—è

- **Development** - –õ–æ–∫–∞–ª—å–Ω–∞—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞
- **Staging** - –¢–µ—Å—Ç–æ–≤–∞—è —Å—Ä–µ–¥–∞
- **Production** - –†–∞–±–æ—á–∞—è —Å—Ä–µ–¥–∞

### 10.2 –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è

```bash
# Django
DJANGO_SECRET_KEY=your_secret_key
DJANGO_DEBUG=False
DJANGO_ALLOWED_HOSTS=your-domain.com

# Database
DATABASE_URL=postgresql://user:pass@host:port/db

# Telegram
TELEGRAM_BOT_TOKEN=your_bot_token
TELEGRAM_WEBHOOK_URL=https://your-domain.com/bot/webhook/

# AI Services
OPENAI_API_KEY=your_openai_key
DEEPSEEK_API_KEY=your_deepseek_key

# External APIs
CBU_API_URL=https://cbu.uz/uz/arkhiv-kursov-valyut/json/
```

### 10.3 Docker –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è

```dockerfile
# Dockerfile –¥–ª—è production
FROM python:3.11-slim

WORKDIR /app

# –°–∏—Å—Ç–µ–º–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –¥–ª—è AI
RUN apt-get update && apt-get install -y \
    ffmpeg \
    libsm6 \
    libxext6 \
    libfontconfig1 \
    libxrender1 \
    libgl1-mesa-glx

# Python –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
COPY requirements.txt .
RUN pip install -r requirements.txt

# –ö–æ–¥ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
COPY . .

# –ö–æ–º–∞–Ω–¥–∞ –∑–∞–ø—É—Å–∫–∞
CMD ["gunicorn", "config.wsgi:application", "--bind", "0.0.0.0:8000"]
```

---

## 11. –ó–ê–ü–†–ï–©–Å–ù–ù–´–ï –ü–†–ê–ö–¢–ò–ö–ò

### 11.1 –ß—Ç–æ –ù–ï–õ–¨–ó–Ø –¥–µ–ª–∞—Ç—å

‚ùå **–ü—Ä—è–º–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ fetch/axios –≤–º–µ—Å—Ç–æ —É—Ç–∏–ª–∏—Ç –ø—Ä–æ–µ–∫—Ç–∞**
‚ùå **–•—Ä–∞–Ω–µ–Ω–∏–µ —Å–µ–∫—Ä–µ—Ç–æ–≤ –≤ –∫–æ–¥–µ**
‚ùå **–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –≥–ª–æ–±–∞–ª—å–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö**
‚ùå **–ò–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—à–∏–±–æ–∫ (silent fails)**
‚ùå **–°–æ–∑–¥–∞–Ω–∏–µ "God classes" (>500 —Å—Ç—Ä–æ–∫)**
‚ùå **–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ `except: pass`**
‚ùå **–û—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –≤ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –º–µ—Å—Ç–∞—Ö**
‚ùå **–ü—Ä—è–º—ã–µ SQL –∑–∞–ø—Ä–æ—Å—ã –±–µ–∑ ORM**
‚ùå **–°–æ–∑–¥–∞–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π –≤—Ä—É—á–Ω—É—é**
‚ùå **–ò–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ type hints**

### 11.2 Code Review —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è

‚úÖ **–í—Å–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è —á–µ—Ä–µ–∑ Pull Request**
‚úÖ **–ú–∏–Ω–∏–º—É–º 1 reviewer**
‚úÖ **–ü—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–µ –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤**
‚úÖ **–°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ code style**
‚úÖ **–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏**

---

## 12. –ö–û–ù–¢–ê–ö–¢–´ –ò –í–û–ü–†–û–°–´

**–ü—Ä–∏ –≤–æ–∑–Ω–∏–∫–Ω–æ–≤–µ–Ω–∏–∏ –≤–æ–ø—Ä–æ—Å–æ–≤:**
1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —ç—Ç—É –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é
2. –ò–∑—É—á–∏—Ç–µ –ø—Ä–∏–º–µ—Ä—ã –∫–æ–¥–∞ –≤ –ø—Ä–æ–µ–∫—Ç–µ
3. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ —Ç–∏–º-–ª–∏–¥—É –∏–ª–∏ –º–µ–Ω—Ç–æ—Ä—É

**–û–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–∞–≤–∏–ª:**
- –í—Å–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –æ–±—Å—É–∂–¥–∞—é—Ç—Å—è —Å –∫–æ–º–∞–Ω–¥–æ–π
- –í–µ—Ä—Å–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
- –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –∏–∑–º–µ–Ω–µ–Ω–∏—è—Ö

---

## –í–ï–†–°–ò–ò –î–û–ö–£–ú–ï–ù–¢–ê

- **v1.0** - –ü–µ—Ä–≤–∞—è –≤–µ—Ä—Å–∏—è –ø—Ä–∞–≤–∏–ª (—Ç–µ–∫—É—â–∞—è)

---

*–≠—Ç–æ—Ç –¥–æ–∫—É–º–µ–Ω—Ç —è–≤–ª—è–µ—Ç—Å—è –∂–∏–≤—ã–º –∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è –ø–æ –º–µ—Ä–µ —Ä–∞–∑–≤–∏—Ç–∏—è –ø—Ä–æ–µ–∫—Ç–∞* 